---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Pricing as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  prices = [],
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex items-between justify-center">
    <div class="grid grid-cols-2 gap-4 dark:text-white sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-2">
      {
        prices &&
          prices.map(({ title, price, period, items, callToAction }) => (
            <div class="col-span-2 mx-auto flex w-full sm:col-span-1 md:col-span-1 lg:col-span-1 xl:col-span-1 intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
              {price && period && (
                <div class="rounded-lg backdrop-blur border border-gray-200 bg-white shadow px-6 py-8 flex w-full max-w-sm flex-col justify-between text-center">
                  <div class="px-2 py-0">
                    {title && (
                      <h3 class="text-center text-xl font-extrabold text-[#eca108] uppercase leading-6 tracking-wider mb-2">{title}</h3>
                    )}
                    <div class="my-8">
                      <div class="flex items-center justify-center text-center text-[#0c1a35] uppercase mb-1">
                        <span class="text-5xl text-[#0c1a35] uppercase">R$</span>
                        <span class="text-6xl uppercase font-extrabold">{price}</span>
                      </div>
                      <span class="text-base text-gray-800 uppercase">{period}</span>
                    </div>
                    {items && (
                      <ul class="my-8 md:my-10 space-y-2 text-left">
                        {items.map(
                          ({ description, icon }) =>
                            description && (
                              <li class="mb-1.5 flex items-start space-x-3 leading-7">
                                <div class="rounded-full bg-primary mt-1">
                                  <Icon name={icon ? icon : 'tabler:check'} class="w-5 h-5 font-bold p-1 text-white" />
                                </div>
                                <span>{description}</span>
                              </li>
                            )
                        )}
                      </ul>
                    )}
                  </div>
                  {callToAction && (
                    <div class={`flex justify-center`}>
                      {typeof callToAction === 'string' ? (
                        <Fragment set:html={callToAction} />
                      ) : (
                        callToAction &&
                        callToAction.href && <Button variant='primary'  {...callToAction} />
                      )}
                    </div>
                  )}
                </div>
              )}
            </div>
          ))
      }
    </div>
  </div>
</WidgetWrapper>
